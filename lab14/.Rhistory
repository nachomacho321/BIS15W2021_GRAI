library(readxl)
CAASP_LAUSD_Scores <- read_excel("C:/Users/Gurshan Rai/Downloads/CAASP LAUSD Scores.xlsx")
View(CAASP_LAUSD_Scores)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyverse)
library(naniar)
2021_GPAs <- readr::read_csv("data/2021TermGPA.csv")
GPAs_2021 <- readr::read_csv("data/2021TermGPA.csv")
View(GPAs_2021)
summary(GPAs_2021)
naniar::miss_var_summary(GPAs_2021)
GPAs_1920 <- readr::read_csv("data/1920TermGPA")
GPAs_1920 <- readr::read_csv("data/1920TermGPA.csv")
GPAs_2021 <- readr::read_csv("data/2021TermGPA.csv")
GPAs_2021 <- GPAs_2021 %>%
janitor::clean_names()
summary(GPAs_2021)
naniar::miss_var_summary(GPAs_2021)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(naniar)
GPAs_2021 <- readr::read_csv("data/2021TermGPA.csv") %>%
janitor::clean_names()
summary(GPAs_2021)
naniar::miss_var_summary(GPAs_2021)
GPAs_1920 <- readr::read_csv("data/1920TermGPA.csv")
summary
GPAs_1920 <- readr::read_csv("data/1920TermGPA.csv") %>%
janitor::clean_names()
summary(GPAs_1920)
miss_var_summary(GPAs_1920)
library(tidyverse)
library(ggmap)
library(lubridate)
repeat {
commands
if(condition) {
break
}
}
repeat {
commands
if(condition) {
break
}
}
x <- 0                 # Preliminary specification of data object
repeat{                # Head of repeat-loop
x <- x + 1           # Body of repeat-loop
print(x)
if(x >= 10) {        # Break condition of repeat-loop
break
}
}
data <- data.frame(x1 = 1:5,      # Create example data
x2 = 6:10,
x3 = 11:15)
data
data1 <- data                   # Replicate example data
i <- 1                          # Create running index
repeat{                         # Start repeat-loop
data1[ , i] <- data1[ , i] + 100
i <- i + 1
if(i > 2) {
break
}
}
data1
#?iris
data(iris)                          # Loading data frame
head(iris)                          # Head of example data
iris1 <- iris                       # Replicate example data
i <- 1
repeat{
iris1[ ,i] <- iris1[ ,i]*10
i <- i+1
if(!is.numeric(iris1[ ,i]))
}
i <- 1
repeat{
iris1[ ,i] <- iris1[ ,i]*10
i <- i+1
if(!is.numeric(iris1[ ,i])){
break
}
}
i <- 1
repeat{
iris1[ ,i] <- iris1[ ,i]*10
i <- i+1
if(!is.numeric(iris1[ ,i])){
break
}
}
head(iris1)
while (test_expression) {
statement
}
x <- 0                  # Preliminary specification of data object
while(x < 10) {         # Head of while-loop
x <- x + 1            # Body of while-loop
print(x)
}
data2 <- data                       # Replicate example data
data2
i <- 1                              # Create running index
while(i <= 2) {                     # Start while-loop
data2[ , i] <- data2[ , i] + 100
i <- i + 1
}
data2
head(iris)                                        # Showing head of data in RStudio console
iris2 <- iris                                     # Replicate example data
head(iris)                                        # Showing head of data in RStudio console
iris2 <- iris                                     # Replicate example data
i <- 1
while (!is.numeric(iris2[ ,i])) {
iris2[ ,i] <- iris2[ ,i]*10
i <- i +1
}
head(iris2)
i <- 1
while (is.numeric(iris2[ ,i])) {
iris2[ ,i] <- iris2[ ,i]*10
i <- i +1
}
head(iris2)
for (value in vector) {
statements
}
for (i in 1:10) {
print(i)
}
data3 <- data                       # Replicate example data
data3
for(i in 1:2) {           # for-loop over columns
data3[ , i] <- data3[ , i] + 100
}
data3
head(iris)                                             # Inspecting iris flower data set
iris3 <- iris                                          # Replicate iris data set
for (i in 1:4) {
iris3[ , i] <- iris3[ , i]*10
}
iris3
data_files <- list.files("data/locations", pattern = "locations-2*", full.names = TRUE)
data_files
# create an empty vector to store those counts
results <- vector(mode = "integer", length = length(data_files))
for (i in 1:length(data_files)){
data0 <- read_csv(data_files[i])
count <- nrow(data0)
results[i] <- count
}
results
# Start by creating an empty data frame
results <- data.frame(file_name = vector(mode = "character", length = length(data_files)),
count = vector(mode = "integer", length = length(data_files)))
data_files3 <- list.files("data/individual_collar_data", full.names = TRUE)
data_files3
# only ggplot
for (i in 1:length(data_files3)){
data0 <- as.data.frame(read_csv(data_files3[i]))
print(
ggplot(data0, aes(x=long,y=lat))+
geom_path()+
geom_point()+
labs(title = data_files3[i], x = "longitude", y = "latitude")
)
}
# how to show them on a map?
# Start by creating an empty data frame
results <- data.frame(file_name = vector(mode = "character", length = length(data_files)),
count = vector(mode = "integer", length = length(data_files)))
for (i in 1:length(data_files)){
data0 <- read_csv(data_files[i])
count <- nrow(data0)
results$file_name[i] <- data_files[i]
results$count[i] <- count
}
results
data_files3 <- list.files("data/individual_collar_data", full.names = TRUE)
data_files3
# only ggplot
for (i in 1:length(data_files3)){
data0 <- as.data.frame(read_csv(data_files3[i]))
print(
ggplot(data0, aes(x=long,y=lat))+
geom_path()+
geom_point()+
labs(title = data_files3[i], x = "longitude", y = "latitude")
)
}
# how to show them on a map?
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()                            # To install core packages or update installed packages
